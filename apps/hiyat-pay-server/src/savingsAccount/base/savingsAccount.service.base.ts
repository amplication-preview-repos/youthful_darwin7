/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SavingsAccount as PrismaSavingsAccount } from "@prisma/client";

export class SavingsAccountServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SavingsAccountCountArgs, "select">
  ): Promise<number> {
    return this.prisma.savingsAccount.count(args);
  }

  async savingsAccounts(
    args: Prisma.SavingsAccountFindManyArgs
  ): Promise<PrismaSavingsAccount[]> {
    return this.prisma.savingsAccount.findMany(args);
  }
  async savingsAccount(
    args: Prisma.SavingsAccountFindUniqueArgs
  ): Promise<PrismaSavingsAccount | null> {
    return this.prisma.savingsAccount.findUnique(args);
  }
  async createSavingsAccount(
    args: Prisma.SavingsAccountCreateArgs
  ): Promise<PrismaSavingsAccount> {
    return this.prisma.savingsAccount.create(args);
  }
  async updateSavingsAccount(
    args: Prisma.SavingsAccountUpdateArgs
  ): Promise<PrismaSavingsAccount> {
    return this.prisma.savingsAccount.update(args);
  }
  async deleteSavingsAccount(
    args: Prisma.SavingsAccountDeleteArgs
  ): Promise<PrismaSavingsAccount> {
    return this.prisma.savingsAccount.delete(args);
  }
}
