/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FreelanceJob as PrismaFreelanceJob } from "@prisma/client";

export class FreelanceJobServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FreelanceJobCountArgs, "select">
  ): Promise<number> {
    return this.prisma.freelanceJob.count(args);
  }

  async freelanceJobs(
    args: Prisma.FreelanceJobFindManyArgs
  ): Promise<PrismaFreelanceJob[]> {
    return this.prisma.freelanceJob.findMany(args);
  }
  async freelanceJob(
    args: Prisma.FreelanceJobFindUniqueArgs
  ): Promise<PrismaFreelanceJob | null> {
    return this.prisma.freelanceJob.findUnique(args);
  }
  async createFreelanceJob(
    args: Prisma.FreelanceJobCreateArgs
  ): Promise<PrismaFreelanceJob> {
    return this.prisma.freelanceJob.create(args);
  }
  async updateFreelanceJob(
    args: Prisma.FreelanceJobUpdateArgs
  ): Promise<PrismaFreelanceJob> {
    return this.prisma.freelanceJob.update(args);
  }
  async deleteFreelanceJob(
    args: Prisma.FreelanceJobDeleteArgs
  ): Promise<PrismaFreelanceJob> {
    return this.prisma.freelanceJob.delete(args);
  }
}
