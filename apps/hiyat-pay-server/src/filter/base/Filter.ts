/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "../../validators";
import {
  IsOptional,
  IsDate,
  IsString,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Type } from "class-transformer";
import { EnumFilterPhotoDuration } from "./EnumFilterPhotoDuration";
import { EnumFilterPhotoSharingDuration } from "./EnumFilterPhotoSharingDuration";
import { EnumFilterProfileColor } from "./EnumFilterProfileColor";
import { User } from "../../user/base/User";
import { EnumFilterUserProfileColor } from "./EnumFilterUserProfileColor";

@ObjectType()
class Filter {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  avatar!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  emoji!: JsonValue;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  photo!: JsonValue;

  @ApiProperty({
    required: false,
    enum: EnumFilterPhotoDuration,
  })
  @IsEnum(EnumFilterPhotoDuration)
  @IsOptional()
  @Field(() => EnumFilterPhotoDuration, {
    nullable: true,
  })
  photoDuration?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumFilterPhotoSharingDuration,
  })
  @IsEnum(EnumFilterPhotoSharingDuration)
  @IsOptional()
  @Field(() => EnumFilterPhotoSharingDuration, {
    nullable: true,
  })
  photoSharingDuration?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumFilterProfileColor,
  })
  @IsEnum(EnumFilterProfileColor)
  @IsOptional()
  @Field(() => EnumFilterProfileColor, {
    nullable: true,
  })
  profileColor?: "Option1" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  user?: User | null;

  @ApiProperty({
    required: false,
    enum: EnumFilterUserProfileColor,
  })
  @IsEnum(EnumFilterUserProfileColor)
  @IsOptional()
  @Field(() => EnumFilterUserProfileColor, {
    nullable: true,
  })
  userProfileColor?: "Option1" | null;
}

export { Filter as Filter };
